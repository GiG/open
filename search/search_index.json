{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to GiG Open","text":"<p>GiG Open is an initiative from GiG to contribute back to the community. Here at GiG, we rely a lot on open technologies so this is our way to give back; both software and knowledge.</p> <p>This documentation site contains the guidelines GiG Employees should follow when using, contributing or creating open source source software.</p>"},{"location":"#gig-open-board","title":"GiG Open Board","text":"<p>The GiG Open Board is a guild of people that moderate GiG's Open Source contributions. Various departments form part of the GiG Open Team, namely: Architecture, InfoSec, Legal and Executives.</p> <p>The board may be contacted on:</p> <ul> <li>Discuss: </li> <li>Email: open@gig.com</li> </ul>"},{"location":"#license","title":"License","text":"<p>Unless otherwise specified, the content of this site is licensed under CC-BY-4.0, while the source-code for this project located on GitHub is licensed under MIT.</p>"},{"location":"#attributions","title":"Attributions","text":"<p>Some of the policies and guidelines here are adopted from the following sources:</p> <ul> <li>Google Open Source Documentation</li> <li>Open Source Guides</li> <li>Producing Open Source Software: How to Run a Successful Free Software Project</li> </ul>"},{"location":"open-knowledge/","title":"Open Knoweldge","text":"<p>Apart from Open Source software, GiG employees also deliver some kick-ass knowledge sharing sessions. These are some recordings of sessions that we have opened to the public.</p>"},{"location":"open-knowledge/#coming-soon","title":"Coming Soon","text":""},{"location":"projects/","title":"Projects we love","text":""},{"location":"projects/#gigs-open-source-software","title":"GiG's Open Source Software","text":"<ul> <li>Coming Soon</li> </ul>"},{"location":"projects/#projects-gig-has-contributed-to","title":"Projects GiG has contributed to","text":"<ul> <li>dotnet/orleans</li> <li>dotnet/core</li> <li>dotnet/sdk</li> <li>OrleansContrib/Orleans.Clustering.Kubernetes</li> <li>open-telemetry/opentelemetry-dotnet</li> <li>angular/tsickle</li> <li>borisermakof/serilog-sinks-fluentd</li> <li>killwort/ClickHouse-Net</li> <li>learnk8s/kubernetes-production-best-practices</li> <li>jasontaylordev/CleanArchitecture</li> </ul>"},{"location":"open-source/contributing/","title":"Contributing to Third-Party Open Source Software","text":"<p>GiG employees are encouraged to contribute to Open Source Software for various reasons, mainly:</p> <ul> <li>Improve the software we rely on</li> <li>Improve their skills</li> <li>E-Meet people from the community</li> </ul>  <p>Tip: Contributions to Third-Party Open Source Software is not necessarily source-code contribution</p> <p>You are also encouraged to contribute:</p> <ul> <li>Documentation</li> <li>Examples</li> <li>Restructuring project layout (to improve usability)</li> <li>Tutorials</li> <li>Issue grooming</li> <li>Answer questions (GitHub, Reddit, StackOverflow)</li> <li>Moderate discussions</li> </ul>"},{"location":"open-source/contributing/#before-you-contribute","title":"Before you contribute","text":"<p>Remember, before you open an issue or pull request, check the project's contributing docs (usually a file called <code>CONTRIBUTING.md</code>, or in the <code>README.md</code>), to see whether you need to include anything specific. For example, they may ask that you follow a template, or require that you use tests.</p> <p>Sometimes, you may find projects that require you to sign a Contributor License Agreement (CLA). If you have doubts about the CLA for that particular project, you should contact the GiG Open Source Initiative Team so they can review and guide you on how to proceed.</p>"},{"location":"open-source/contributing/#behavior","title":"Behavior","text":"<p>Remember, that when contributing as a GiG Employee your actions reflect on GiG as well, so it's important to adopt GiG's values in your behavior, namely:</p> <ul> <li>Be considerate, kind, constructive, and helpful</li> <li>Do not engage in demeaning, discriminatory, harassing, hateful, sexualized, or physically threatening behavior, speech, and imagery</li> <li>Do not engage in unwanted physical contact</li> <li>Resolve peacefully</li> <li>Abide by the project's Contributor Covenant</li> </ul>"},{"location":"open-source/creating/","title":"Creating Open Source Software (or open-sourcing internal software)","text":"<p>There are serious legal implications anytime a GiGster open-sources code. The GiG Open Source Initiative has a process that you must follow to help us comply with our legal and ethical obligations.</p> <p>We actively encourage employees to open-source internal software as much as possible as long as the projects meet GiG's Open Source requirements.</p>  <p>When not to Open Source a Project?</p> <p>In general, the number one reason not to open source a project is that it includes, or links to, GiG's \"secret sauce\" or sensitive data because doing so can create security issues or erode our competitive advantage. If in doubt, contact the open-source team on open@gig.com</p>"},{"location":"open-source/creating/#checklist-for-open-sourcing-an-internal-gig-project","title":"Checklist for Open Sourcing an internal GiG Project","text":"<ul> <li> The project has the GiG MIT <code>LICENSE</code> file</li> <li> The project has the GiG Contributor Covenant <code>CODE_OF_CONDUCT.md</code> file v2.0 or better</li> <li> The project has an appropriate <code>README.md</code>, <code>CONTRIBUTING.md</code>, Issue and pull request templates and <code>SECURITY.md</code></li> <li> The project does not contain, or does not link to, GiG's \"secret sauce\" or sensitive data.</li> <li> Assurances should be made that any source-code we are using have licensing that permit the source-code to be open-sourced</li> <li> There are no secrets/API Keys/Password/GiG Hostnames/Domains (even in the git history)</li> <li> The name is easy to remember, gives some idea of what the project does, and does not conflict with an existing project or infringe on trademarks</li> <li> An open-source project should have an open-source pipeline. Include build and deploy badges in your README</li> <li> Artifacts that are produced by the project should be publicly accessible. Example: NuGet Packages (nuget.org), Docker Containers (Docker Hub), npm packages (npmjs), Maven (Maven Central), RubyGems (RubyGems.org), pip Packages (pypi.org), etc\u2026</li> <li> The issue queue is up-to-date, with issues clearly organized and labeled</li> <li> Project uses consistent code conventions and clear function/method/variable names</li> <li> The code is clearly commented, documenting intentions and edge cases</li> <li> There are no sensitive materials in the revision history, issues, or pull requests (for example, passwords or other non-public information)</li> <li> The project is of high-quality, well documented and well tested</li> <li> Had the project scanned and approved by GiG InfoSec Department</li> <li> Had the project approved by the GiG Open Initiative Office</li> <li> Make sure you are committed to maintaining the project</li> </ul>"},{"location":"open-source/creating/#commitment-to-project-maintenance-after-going-open-source","title":"Commitment to project maintenance after going Open Source","text":"<p>It is not enough that projects are open-sourced. Developers that open-source projects must make a commitment to keep maintaining the open-source project</p>  <p>Warning</p> <p>Idle projects that are left on public GiG Repositories that don\u2019t contribute anything will be archived!</p>  <p>We expect a commitment from the developers to:</p> <ul> <li>Make sure that issues are not left unresolved for an unreasonable amount of time</li> <li>Make sure that pull requests are not ignored</li> <li>Make sure people from the community can get in contact with the people running the project</li> <li>Make sure there is a clear ChangeLog of changes from one version to the next</li> <li>git commit messages, pull requests, comments and any public discussion should be done at a professional level, keeping in mind that they are visible by the public and affect GiG\u2019s reputation</li> </ul>  <p>Danger</p> <p>As much as open-source projects can enhance GiG's reputation, leaving projects in a poor state can hurt it.</p>"},{"location":"open-source/forking/","title":"Forking a Third-Party Repository","text":"<p>Note</p> <p>This page is not talking about the action of forking a project for the sake of submitting a pull request to the main repository, but rather forking for taking ownership of the project. </p> <p>This is allowed, but any forks for this purpose should never be forked under the <code>gig/</code> namespace</p>  <p>Forking a Third-Party repository for taking ownership of the project should be done as a last resort. Consider the following:</p> <ul> <li>Why not contribute to the main project instead?</li> <li>Do you have the required resources to maintain the whole project and not just your changes?</li> <li>Do you have a strategy to keep your fork updated with changes upstream?</li> <li>Make sure the <code>LICENSE</code> of the project allows forking and is a <code>LICENSE</code> that is accepted by GiG.</li> <li>If a repository is forked as a GiG Project, it has to follow the same standards and guidelines as if GiG is the original creator of the project.</li> <li>This means the project has to go through the same approval process</li> </ul>"},{"location":"open-source/using/","title":"Using Open Source Software","text":"<p>At GiG it is encouraged to adopt open-source mentality, both internally and externally (when possible). Using open source software enables us to compete at the level of larger tech companies and enable the flexibility, interoperability and cost savings that these solutions provide. </p> <p>When considering adopting technologies, positive weight should be given to technologies that are open-source and are actively maintained by a community.</p> <p>If you use open source technologies, we strongly encourage you to contribute back to the project and be an active member of the community.</p> <p>Remember to be careful and comply with the licenses. Besides, it\u2019s the right thing to do out of respect for our fellow coders.</p>  <p>Warning</p> <p>GiG is adopting Google's stance on AGPL. This means that software licensed under the AGPL is NOT allowed at GiG. Do not attempt to check AGPL-licensed code into git or use it in a GiG product in any way. For more details visit go/agpl.</p>"}]}