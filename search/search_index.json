{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to GiG Open \u00b6 GiG Open is an initiative from GiG to contribute back to the community. Here at GiG, we rely a lot on open technologies so this is our way to give back; both software and knowledge. This documentation site contains the guidelines GiG Employees should follow when using , contributing or creating open source source software. GiG Open Board \u00b6 The GiG Open Board is a guild of people that moderate GiG's Open Source contributions. Various departments form part of the GiG Open Team, namely: Architecture, InfoSec, Legal and Executives. The board may be contacted on: Internal Slack: #gig-open Email: open@gig.com License \u00b6 Unless otherwise specified, the content of this microsite is licensed under CC-BY-4.0 , while the source-code for this project located on GitHub is licensed under MIT . Attributions \u00b6 Some of the policies and guidelines here are adopted from the following sources: Google Open Source Documentation Open Source Guides Producing Open Source Software: How to Run a Successful Free Software Project","title":"Welcome"},{"location":"#welcome-to-gig-open","text":"GiG Open is an initiative from GiG to contribute back to the community. Here at GiG, we rely a lot on open technologies so this is our way to give back; both software and knowledge. This documentation site contains the guidelines GiG Employees should follow when using , contributing or creating open source source software.","title":"Welcome to GiG Open"},{"location":"#gig-open-board","text":"The GiG Open Board is a guild of people that moderate GiG's Open Source contributions. Various departments form part of the GiG Open Team, namely: Architecture, InfoSec, Legal and Executives. The board may be contacted on: Internal Slack: #gig-open Email: open@gig.com","title":"GiG Open Board"},{"location":"#license","text":"Unless otherwise specified, the content of this microsite is licensed under CC-BY-4.0 , while the source-code for this project located on GitHub is licensed under MIT .","title":"License"},{"location":"#attributions","text":"Some of the policies and guidelines here are adopted from the following sources: Google Open Source Documentation Open Source Guides Producing Open Source Software: How to Run a Successful Free Software Project","title":"Attributions"},{"location":"open-knowledge/","text":"Open Knoweldge \u00b6 Apart from Open Source software, GiG employees also deliver some kick-ass knowledge sharing sessions. These are some recordings of sessions that we have opened to the public. Coming Soon \u00b6","title":"Open Knowledge"},{"location":"open-knowledge/#open-knoweldge","text":"Apart from Open Source software, GiG employees also deliver some kick-ass knowledge sharing sessions. These are some recordings of sessions that we have opened to the public.","title":"Open Knoweldge"},{"location":"open-knowledge/#coming-soon","text":"","title":"Coming Soon"},{"location":"projects/","text":"Projects we love \u00b6 GiG's Open Source Software \u00b6 Coming Soon Projects GiG has contributed to \u00b6 dotnet/orleans dotnet/core dotnet/sdk OrleansContrib/Orleans.Clustering.Kubernetes open-telemetry/opentelemetry-dotnet angular/tsickle borisermakof/serilog-sinks-fluentd killwort/ClickHouse-Net learnk8s/kubernetes-production-best-practices","title":"Projects"},{"location":"projects/#projects-we-love","text":"","title":"Projects we love"},{"location":"projects/#gigs-open-source-software","text":"Coming Soon","title":"GiG's Open Source Software"},{"location":"projects/#projects-gig-has-contributed-to","text":"dotnet/orleans dotnet/core dotnet/sdk OrleansContrib/Orleans.Clustering.Kubernetes open-telemetry/opentelemetry-dotnet angular/tsickle borisermakof/serilog-sinks-fluentd killwort/ClickHouse-Net learnk8s/kubernetes-production-best-practices","title":"Projects GiG has contributed to"},{"location":"open-source/contributing/","text":"Contributing to Third-Party Open Source Software \u00b6 GiG employees are encouraged to contribute to Open Source Software for various reasons, mainly: Improve the software we rely on Improve their skills E-Meet people from the community Tip: Contributions to Third-Party Open Source Software is not necessarily source-code contribution You are also encouraged to contribute: Documentation Examples Restructuring project layout (to improve usability) Tutorials Issue grooming Answer questions (GitHub, Reddit, StackOverflow) Moderate discussions Before you contribute \u00b6 Remember, before you open an issue or pull request, check the project's contributing docs (usually a file called CONTRIBUTING.md , or in the README.md ), to see whether you need to include anything specific. For example, they may ask that you follow a template, or require that you use tests. Sometimes, you may find projects that require you to sign a Contributor License Agreement (CLA). If you have doubts about the CLA for that particular project, you should contact the GiG Open Source Initiative Team so they can review and guide you on how to proceed. Behavior \u00b6 Remember, that when contributing as a GiG Employee your actions reflect on GiG as well, so it's important to adopt GiG's values in your behavior, namely: Be considerate, kind, constructive, and helpful Do not engage in demeaning, discriminatory, harassing, hateful, sexualized, or physically threatening behavior, speech, and imagery Do not engage in unwanted physical contact Resolve peacefully Abide by the project's Contributor Covenant","title":"Contributing"},{"location":"open-source/contributing/#contributing-to-third-party-open-source-software","text":"GiG employees are encouraged to contribute to Open Source Software for various reasons, mainly: Improve the software we rely on Improve their skills E-Meet people from the community Tip: Contributions to Third-Party Open Source Software is not necessarily source-code contribution You are also encouraged to contribute: Documentation Examples Restructuring project layout (to improve usability) Tutorials Issue grooming Answer questions (GitHub, Reddit, StackOverflow) Moderate discussions","title":"Contributing to Third-Party Open Source Software"},{"location":"open-source/contributing/#before-you-contribute","text":"Remember, before you open an issue or pull request, check the project's contributing docs (usually a file called CONTRIBUTING.md , or in the README.md ), to see whether you need to include anything specific. For example, they may ask that you follow a template, or require that you use tests. Sometimes, you may find projects that require you to sign a Contributor License Agreement (CLA). If you have doubts about the CLA for that particular project, you should contact the GiG Open Source Initiative Team so they can review and guide you on how to proceed.","title":"Before you contribute"},{"location":"open-source/contributing/#behavior","text":"Remember, that when contributing as a GiG Employee your actions reflect on GiG as well, so it's important to adopt GiG's values in your behavior, namely: Be considerate, kind, constructive, and helpful Do not engage in demeaning, discriminatory, harassing, hateful, sexualized, or physically threatening behavior, speech, and imagery Do not engage in unwanted physical contact Resolve peacefully Abide by the project's Contributor Covenant","title":"Behavior"},{"location":"open-source/creating/","text":"Creating Open Source Software (or open-sourcing internal software) \u00b6 There are serious legal implications anytime a GIGster open-sources code. The GiG Open Source Initiative has a process that you must follow to help us comply with our legal and ethical obligations. We actively encourage employees to open-source internal software as much as possible as long as the projects meet GiG's Open Source requirements. When not to Open Source a Project? In general, the number one reason not to open source a project is that it includes, or links to, GiG's \"secret sauce\" or sensitive data because doing so can create security issues or erode our competitive advantage. If in doubt, contact the open-source team on open-source@gig.com Steps to Open Source an internal GiG Project \u00b6 The project has the GiG MIT LICENSE file The project has the GiG Contributor Covenant CODE_OF_CONDUCT.md file The project has an appropriate README.md , CONTRIBUTING.md , Issue and pull request templates and SECURITY.md The project does not contain, or does not link to, GiG's \"secret sauce\" or sensitive data. Assurances should be made that any source-code we are using have licensing that permit the source-code to be open-sourced There are no secrets/API Keys/Password/GiG Hostnames/Domains (even in the git history) The name is easy to remember, gives some idea of what the project does, and does not conflict with an existing project or infringe on trademarks The issue queue is up-to-date, with issues clearly organized and labeled Project uses consistent code conventions and clear function/method/variable names The code is clearly commented, documenting intentions and edge cases There are no sensitive materials in the revision history, issues, or pull requests (for example, passwords or other non-public information) The project is of high-quality, well documented and well tested Had the project scanned and approved by GiG InfoSec Department Had the project approved by the GiG Open Source Initiative Office Make sure you are committed to maintaining the project An open-source project should have an open-source pipeline. Include build and deploy badges in your README Make sure that artifacts that are produced by the project should be publicly accessible. Example: NuGet Packages, Docker Containers, npm packages, etc\u2026 Commitment to project maintenance after going Open Source \u00b6 It is not enough that project are open-sourced. Developers that open-source projects must make a commitment to keep maintaining the open-source project Warning Idle projects that are left on public GIG Repositories that don\u2019t contribute anything will be archived! We expect a commitment from the developers to: Make sure that issues are not left unresolved for an unreasonable amount of time Pull requests are not ignored Make sure people from the community can get in contact with the people running the project Make sure there is a clear ChangeLog of changes from one version to the next git commit messages, pull requests, comments and any public discussion should be done at a professional level, keeping in mind that they are visible by the public and affect GIG\u2019s reputation As much as open-source projects can enhance GiG's reputation, leaving projects in a poor state can hurt it.","title":"Creating"},{"location":"open-source/creating/#creating-open-source-software-or-open-sourcing-internal-software","text":"There are serious legal implications anytime a GIGster open-sources code. The GiG Open Source Initiative has a process that you must follow to help us comply with our legal and ethical obligations. We actively encourage employees to open-source internal software as much as possible as long as the projects meet GiG's Open Source requirements. When not to Open Source a Project? In general, the number one reason not to open source a project is that it includes, or links to, GiG's \"secret sauce\" or sensitive data because doing so can create security issues or erode our competitive advantage. If in doubt, contact the open-source team on open-source@gig.com","title":"Creating Open Source Software (or open-sourcing internal software)"},{"location":"open-source/creating/#steps-to-open-source-an-internal-gig-project","text":"The project has the GiG MIT LICENSE file The project has the GiG Contributor Covenant CODE_OF_CONDUCT.md file The project has an appropriate README.md , CONTRIBUTING.md , Issue and pull request templates and SECURITY.md The project does not contain, or does not link to, GiG's \"secret sauce\" or sensitive data. Assurances should be made that any source-code we are using have licensing that permit the source-code to be open-sourced There are no secrets/API Keys/Password/GiG Hostnames/Domains (even in the git history) The name is easy to remember, gives some idea of what the project does, and does not conflict with an existing project or infringe on trademarks The issue queue is up-to-date, with issues clearly organized and labeled Project uses consistent code conventions and clear function/method/variable names The code is clearly commented, documenting intentions and edge cases There are no sensitive materials in the revision history, issues, or pull requests (for example, passwords or other non-public information) The project is of high-quality, well documented and well tested Had the project scanned and approved by GiG InfoSec Department Had the project approved by the GiG Open Source Initiative Office Make sure you are committed to maintaining the project An open-source project should have an open-source pipeline. Include build and deploy badges in your README Make sure that artifacts that are produced by the project should be publicly accessible. Example: NuGet Packages, Docker Containers, npm packages, etc\u2026","title":"Steps to Open Source an internal GiG Project"},{"location":"open-source/creating/#commitment-to-project-maintenance-after-going-open-source","text":"It is not enough that project are open-sourced. Developers that open-source projects must make a commitment to keep maintaining the open-source project Warning Idle projects that are left on public GIG Repositories that don\u2019t contribute anything will be archived! We expect a commitment from the developers to: Make sure that issues are not left unresolved for an unreasonable amount of time Pull requests are not ignored Make sure people from the community can get in contact with the people running the project Make sure there is a clear ChangeLog of changes from one version to the next git commit messages, pull requests, comments and any public discussion should be done at a professional level, keeping in mind that they are visible by the public and affect GIG\u2019s reputation As much as open-source projects can enhance GiG's reputation, leaving projects in a poor state can hurt it.","title":"Commitment to project maintenance after going Open Source"},{"location":"open-source/using/","text":"Using Open Source Software \u00b6 At GiG it is encouraged to adopt open-source mentality, both internally and externally (when possible). Using open source software enables us to compete at the level of larger tech companies and enable the flexibility, interoperability and cost savings that these solutions provide. When considering adopting technologies, positive weight should be given to technologies that are open-source and are actively maintained by a community. If you use open source technologies, we strongly encourage you to contribute back to the project and be an active member of the community . Remember to be careful and comply with the licenses. Besides, it\u2019s the right thing to do out of respect for our fellow coders. Warning GiG is adopting Google's stance on AGPL. This means that software licensed under the AGPL is NOT allowed at GiG. Do not attempt to check AGPL-licensed code into git or use it in a GiG product in any way. For more details visit go/agpl .","title":"Using"},{"location":"open-source/using/#using-open-source-software","text":"At GiG it is encouraged to adopt open-source mentality, both internally and externally (when possible). Using open source software enables us to compete at the level of larger tech companies and enable the flexibility, interoperability and cost savings that these solutions provide. When considering adopting technologies, positive weight should be given to technologies that are open-source and are actively maintained by a community. If you use open source technologies, we strongly encourage you to contribute back to the project and be an active member of the community . Remember to be careful and comply with the licenses. Besides, it\u2019s the right thing to do out of respect for our fellow coders. Warning GiG is adopting Google's stance on AGPL. This means that software licensed under the AGPL is NOT allowed at GiG. Do not attempt to check AGPL-licensed code into git or use it in a GiG product in any way. For more details visit go/agpl .","title":"Using Open Source Software"}]}